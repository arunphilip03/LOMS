/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.iiitb.gui;

import com.iiitb.utils.LOMSCustomFilter;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author ARUN
 */
public class ImportPanel extends javax.swing.JPanel {

    /**
     * Creates new form ImportPanel
     */
    public ImportPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ImportFileChooser = new javax.swing.JFileChooser();
        uploadFilePath = new javax.swing.JTextField();
        BrowseButton = new javax.swing.JButton();
        UploadButton = new javax.swing.JButton();
        infoLabel = new javax.swing.JLabel();
        seperator = new javax.swing.JSeparator();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Import Package", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.BELOW_TOP));

        uploadFilePath.setEditable(false);
        uploadFilePath.setToolTipText("File Path");

        BrowseButton.setText("Browse");
        BrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseButtonClicked(evt);
            }
        });

        UploadButton.setText("Upload");
        UploadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadButtonClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(seperator)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(uploadFilePath, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BrowseButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(infoLabel))
                            .addComponent(UploadButton))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uploadFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BrowseButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(UploadButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 200, Short.MAX_VALUE)
                .addComponent(seperator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(infoLabel))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void browseButtonClicked(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseButtonClicked
        FileFilter filterTypes = new LOMSCustomFilter("Packages(*.zip)", new String[]{".zip"});
        ImportFileChooser.addChoosableFileFilter(filterTypes);
        ImportFileChooser.setFileFilter(filterTypes);
        ImportFileChooser.setFileView(null);
        int returnVal = ImportFileChooser.showDialog(this, "Select Package");

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            final File selectedFile = ImportFileChooser.getSelectedFile();
            try {
                uploadFilePath.setText(selectedFile.toString());
                System.out.println("File Length: " + selectedFile.length());
                infoLabel.setText("File Size(Bytes): " + selectedFile.length());

            } catch (Exception ex) {
                System.out.println("Problem accessing file");
            }
        } else {
            System.out.println("File access cancelled by user");
        }
    }//GEN-LAST:event_browseButtonClicked

    private void uploadButtonClicked(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadButtonClicked

        if (uploadFilePath.getText().isEmpty()) {
            //System.out.println("No file path to upload");
            JOptionPane.showMessageDialog(this, "Select SCORM package to upload", "Upload Error", JOptionPane.ERROR_MESSAGE);
        } else {
        }
    }//GEN-LAST:event_uploadButtonClicked
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BrowseButton;
    private javax.swing.JFileChooser ImportFileChooser;
    private javax.swing.JButton UploadButton;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JSeparator seperator;
    private javax.swing.JTextField uploadFilePath;
    // End of variables declaration//GEN-END:variables
}
